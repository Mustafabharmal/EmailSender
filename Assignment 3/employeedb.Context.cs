//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment_3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DegreeEntities : DbContext
    {
        public DegreeEntities()
            : base("name=DegreeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SalaryAudit> SalaryAudits { get; set; }
        public virtual DbSet<t_Employee> t_Employee { get; set; }
        public virtual DbSet<t_library> t_library { get; set; }
        public virtual DbSet<T_MARKSHEET> T_MARKSHEET { get; set; }
        public virtual DbSet<t_Salary> t_Salary { get; set; }
        public virtual DbSet<T_Student> T_Student { get; set; }
        public virtual DbSet<T_SUBJECT> T_SUBJECT { get; set; }
        public virtual DbSet<t_user> t_user { get; set; }
    
        public virtual ObjectResult<GetEmployeeSalaryByParameter_Result> GetEmployeeSalaryByParameter(Nullable<int> employeeId, string monthName)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSalaryByParameter_Result>("GetEmployeeSalaryByParameter", employeeIdParameter, monthNameParameter);
        }
    
        public virtual ObjectResult<GetEmployeeSalaryDetails_Result> GetEmployeeSalaryDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSalaryDetails_Result>("GetEmployeeSalaryDetails");
        }
    }
}
